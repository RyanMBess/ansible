---
- name: uri module demo
  hosts: localhost 
  gather_facts: false
  vars:
    server: "https://10.10.20.60"
    endpoint: "/token/v2/authenticate"
    microsoft: 
      - 10.10.0.0
  vars_files:
    - /home/ryan/github/ansible/vars/creds.yaml
  
  tasks:

  #----------------------------------------------------------------------------
  # AWS IPs EDL
  #----------------------------------------------------------------------------
      
    - name: Get Data from AWS
      ansible.builtin.uri:
        url: "https://ip-ranges.amazonaws.com/ip-ranges.json"
        return_content: true
      register: raw_data
    
    - name: Filter IPs
      ansible.builtin.set_fact:
        ipv4_range_list: "{{ raw_data.json.prefixes|selectattr('ip_prefix', 'defined') | selectattr('service', 'equalto', 'AMAZON') | map(attribute='ip_prefix') | unique | flatten }}"
        ipv6_range_list: "{{ raw_data.json.ipv6_prefixes|selectattr('ipv6_prefix', 'defined') | selectattr('service', 'equalto', 'AMAZON') | map(attribute='ipv6_prefix') | unique | flatten }}"       

    - name: Store all AWS IPs into Variable
      ansible.builtin.set_fact:
        all_aws_ips: "{{  ipv4_range_list + ipv6_range_list  }}"

    - name: login
      ansible.builtin.uri:
        url: "{{ server }}{{ endpoint }}"
        method: POST
        validate_certs: false
        body:
          username: "{{  sw_admin  }}"
          password: "{{ sw_password  }}"
        body_format: form-urlencoded
        headers:
          Content-Type: application/x-www-form-urlencoded        
      register: login
       
    - name: store session data # storing tokens and cookies into variables for use later
      ansible.builtin.set_fact:
        cookies_string:  "{{ login.cookies_string  }}"
        xsrf_token:  "{{  login.cookies['XSRF-TOKEN']  }}"
        cookie:  "{{ login.cookies['stealthwatch.jwt']  }}"

    - name: Update Bad Hosts Group
      ansible.builtin.uri:
        url: 'https://10.10.20.60/smc-configuration/rest/v1/tenants/311/tags/50121'
        method: PUT
        validate_certs: false
        body:
          id: 50121
          name: 'Bad Hosts'
          location: OUTSIDE
          ranges: "{{  all_aws_ips }}"
          # description: 'A sample of a threat feed'
          # hostBaselines: false
          # suppressExcludedServices: true
          # inverseSuppression: false
          # hostTrap: false
          # sendToCta: false
          domainId: 311 # minimum needed to update
          #parentId: 0
        body_format: json
        headers:
          Content-Type: application/json
          X-XSRF-TOKEN: "{{  xsrf_token  }}"
          Cookie: "{{ cookies_string  }}"
        follow_redirects: safe
      register: updated_result
    
    - name: print updated
      ansible.builtin.debug:
        var: updated_result

